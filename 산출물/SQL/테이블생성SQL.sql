REM  ***************************************************************************
REM  제목 : [최종프로젝트] 하나1PIECE 조각투자 플랫폼 테이블 생성 스크립트
REM  작성자 : 박경덕
REM  작성 일자 : 2023-08-06 최초 작성
REM  ***************************************************************************
--------------------------------------------------------------------------------
-- 시퀸스 생성
--------------------------------------------------------------------------------
-- 은행 거래내역 : 은행 거래내역 번호
CREATE SEQUENCE BT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 은행 예외 로그 : 예외 로그 id
CREATE SEQUENCE BLOG_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;
  
-- 지갑 거래내역 : 지갑 거래내역 번호
CREATE SEQUENCE WT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 주문 : 주문 번호
CREATE SEQUENCE ORDER_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 호가 : 호가 id
CREATE SEQUENCE OB_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 공지사항 : 공지사항 id
CREATE SEQUENCE ANNOUNCEMENT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 시스템 예외 로그 : 예외 로그 id
CREATE SEQUENCE LOG_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 배당금 지급내역 : 배당금 지급 번호
CREATE SEQUENCE PN_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 공모 청약 : 공모, 청약 번호
CREATE SEQUENCE POI_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE; 

-- 매각 투표 : 매각 투표 id
CREATE SEQUENCE SV_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE; 

--------------------------------------------------------------------------------
-- [계정계] 테이블 생성
--------------------------------------------------------------------------------
-- 은행 계좌
CREATE TABLE ACCOUNT (
  ACCOUNT_NUMBER VARCHAR2(20) PRIMARY KEY,
  PASSWORD NUMBER(4) NOT NULL,
  BALANCE NUMBER(13) DEFAULT 0 NOT NULL,
  OPENING_DATE DATE DEFAULT SYSDATE NOT NULL,
  RESIDENT_NUMBER1 NUMBER(6) NOT NULL,
  RESIDENT_NUMBER2 NUMBER(7) NOT NULL,
  NAME VARCHAR2(20) NOT NULL
);

-- 은행 거래내역
CREATE TABLE BANK_TRANSACTION (
  TRANSACTION_NUMBER NUMBER(8) DEFAULT BT_SEQ.NEXTVAL PRIMARY KEY,
  ACCOUNT_NUMBER VARCHAR2(20) NOT NULL,
  CLASSIFICATION VARCHAR2(3) NOT NULL,
  NAME VARCHAR2(10) NOT NULL,
  AMOUNT NUMBER(10) NOT NULL,
  BALANCE NUMBER(13) NOT NULL,
  BANK_CODE VARCHAR2(5) NOT NULL,
  RECIPIENT_ACCOUNT_NUMBER VARCHAR2(20) NOT NULL,
  TRANSACTION_DATE DATE DEFAULT SYSDATE NOT NULL,
  
  CONSTRAINT FK_BANK_TRANSACTION_ACCOUNT_NUMBER FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES account(account_number)
);

-- 은행 예외 로그
CREATE TABLE BANK_EXCEPTION_LOG (
  ID NUMBER(8) DEFAULT BLOG_SEQ.NEXTVAL PRIMARY KEY,
  LOG_CODE VARCHAR2(20),
  OCCUR_DATE DATE DEFAULT SYSDATE,
  PROGRAM VARCHAR2(30),
  MSG VARCHAR2(100),
  NOTE VARCHAR2(50)
);

--------------------------------------------------------------------------------
-- [조각투자 시스템] 테이블 생성
--------------------------------------------------------------------------------
-- 관리자
CREATE TABLE MANAGER (
  ID VARCHAR2(15) PRIMARY KEY,
  NAME VARCHAR2(30) NOT NULL,
  PASSWORD VARCHAR2(30) NOT NULL,
  ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL
);

-- 통합 회원
CREATE TABLE ONE_MEMBERS (
  ID VARCHAR2(15) PRIMARY KEY,
  NAME VARCHAR2(30) NOT NULL,
  PASSWORD VARCHAR2(30) NOT NULL,
  PHONE VARCHAR2(30) NOT NULL,
  EMAIL VARCHAR2(30) NOT NULL,
  REFERRAL_CODE VARCHAR2(5) NOT NULL,
  
  CONSTRAINT uk_one_members_phone UNIQUE (phone),
  CONSTRAINT uk_one_members_email UNIQUE (email),
  CONSTRAINT uk_one_members_referral_code UNIQUE (referral_code)
);

-- 지갑
CREATE TABLE WALLET (
  WALLET_NUMBER VARCHAR2(20) PRIMARY KEY,
  MEMBER_ID VARCHAR2(20) NOT NULL,
  ACCOUNT_NUMBER VARCHAR2(20) NOT NULL,
  PASSWORD VARCHAR2(4) NOT NULL,
  BALANCE VARCHAR2(13) NOT NULL,
  OPENING_DATE DATE DEFAULT SYSDATE NOT NULL,
  
  CONSTRAINT FK_WALLET_MEMBER_ID FOREIGN KEY (MEMBER_ID) REFERENCES one_members(id),
  CONSTRAINT FK_WALLET_ACCOUNT_NUMBER FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES account(account_number)
);

-- 지갑 거래내역
CREATE TABLE WALLET_TRANSACTION (
  TRANSACTION_NUMBER NUMBER(8) DEFAULT WT_SEQ.NEXTVAL PRIMARY KEY,
  WALLET_NUMBER VARCHAR2(20) NOT NULL,
  CLASSIFICATION VARCHAR2(3) NOT NULL,
  AMOUNT NUMBER(10) NOT NULL,
  BALANCE NUMBER(13) NOT NULL,
  TRANSACTION_DATE DATE DEFAULT SYSDATE NOT NULL,
  
  CONSTRAINT FK_WALLET_TRANSACTION_WALLET_NUMBER FOREIGN KEY (WALLET_NUMBER) REFERENCES WALLET(WALLET_NUMBER)
);

-- 부동산 매물
CREATE TABLE REAL_ESTATE_SALE (
  LISTING_NUMBER NUMBER(8) PRIMARY KEY,
  AREA_CODE VARCHAR2(10) NOT NULL,
  STATE VARCHAR2(10) NOT NULL
);

-- 부동산 매물 상세 정보
CREATE TABLE REAL_ESTATE_INFO (
  LISTING_NUMBER NUMBER(8) PRIMARY KEY,
  BUILDING_NAME VARCHAR2(30) NOT NULL,
  ADDRESS VARCHAR2(100) NOT NULL,
  FLOORS NUMBER(3) NOT NULL,
  USAGE VARCHAR2(30) NOT NULL,
  LAND_AREA VARCHAR2(10) NOT NULL,
  FLOOR_AREA VARCHAR2(10) NOT NULL,
  COVERAGE_RATIO NUMBER(3, 1) NOT NULL,
  FLOOR_AREA_RATIO NUMBER(3, 1) NOT NULL,
  COMPLETION_DATE DATE NOT NULL,
  LATITUDE NUMBER(3, 10) NOT NULL,
  LONGITUDE NUMBER(3, 10) NOT NULL,
  IMAGE1 VARCHAR2(100),
  IMAGE2 VARCHAR2(100),
  IMAGE3 VARCHAR2(100),
  
  CONSTRAINT FK_REAL_ESTATE_INFO_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 발행 정보
CREATE TABLE PUBLICATION_INFO (
  LISTING_NUMBER NUMBER(8) PRIMARY KEY,
  SUBJECT VARCHAR2(30) NOT NULL,
  TYPE VARCHAR2(30) NOT NULL,
  PUBLISHER VARCHAR2(30) NOT NULL,
  VOLUME NUMBER(10) NOT NULL,
  ISSUE_PRICE NUMBER(7) NOT NULL,
  TOTAL_AMOUNT NUMBER(12) NOT NULL,
  START_DATE DATE NOT NULL,
  EXPIRATION_DATE DATE NOT NULL,
  FIRST_DIVIDEND_DATE DATE NOT NULL,
  DIVIDEND_CYCLE NUMBER(3) NOT NULL,
  
  CONSTRAINT FK_RPUBLICATION_INFO_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 임차인 정보
CREATE TABLE TENANT_INFO (
  LISTING_NUMBER NUMBER(8) PRIMARY KEY,
  LESSEE VARCHAR(30) NOT NULL,
  SECTOR VARCHAR(30) NOT NULL,
  CONTRACT_DATE DATE NOT NULL,
  EXPIRATION_DATE DATE NOT NULL,
  
  CONSTRAINT FK_TENANT_INFO_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 매각 완료 건물
CREATE TABLE SOLD_BUILDING (
  LISTING_NUMBER NUMBER(8) PRIMARY KEY,
  SOLD_DATE DATE DEFAULT SYSDATE NOT NULL,
  AMOUNT NUMBER(13) NOT NULL,
  
  CONSTRAINT FK_SOLD_BUILDING_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 주문
CREATE TABLE STO_ORDERS (
  ORDER_ID NUMBER(8) DEFAULT ORDER_SEQ.NEXTVAL PRIMARY KEY,
  LISTING_NUMBER NUMBER(8) NOT NULL,
  MEMBER_ID VARCHAR2(20) NOT NULL,
  ORDER_TYPE VARCHAR2(4) NOT NULL,
  AMOUNT NUMBER(8) NOT NULL,
  QUANTITY NUMBER(8) NOT NULL,
  STATUS VARCHAR2(10) NOT NULL,
  WALLET_BALANCE NUMBER(13) NOT NULL,
  ORDER_DATE DATE DEFAULT SYSDATE NOT NULL,
  
  CONSTRAINT FK_ORDER_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER),
  CONSTRAINT FK_ORDER_MEMBER_ID FOREIGN KEY (MEMBER_ID) REFERENCES one_members(id)
);

-- 호가
CREATE TABLE ORDER_BOOK (
  ID NUMBER(8) DEFAULT OB_SEQ.NEXTVAL PRIMARY KEY,
  LISTING_NUMBER NUMBER(8),
  TYPE VARCHAR2(4) NOT NULL,
  PRICE NUMBER(8) NOT NULL,
  AMOUNT NUMBER(8) NOT NULL,
  
  CONSTRAINT FK_ORDER_BOOK_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 보유 토큰 (다대다 관계 중간 연결)
CREATE TABLE STOS (
  WALLET_NUMBER VARCHAR2(20),
  LISTING_NUMBER NUMBER(8),
  AMOUNT NUMBER(8) NOT NULL,
  
  CONSTRAINT PK_STOS PRIMARY KEY (WALLET_NUMBER, LISTING_NUMBER), -- 복합 기본키 설정
  CONSTRAINT FK_STOS_WALLET_NUMBER FOREIGN KEY (WALLET_NUMBER) REFERENCES WALLET(WALLET_NUMBER),
  CONSTRAINT FK_STOS_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 배당금 지급내역
CREATE TABLE DIVIDEND_DETAILS (
  PAYOUT_NUMBER NUMBER(8) DEFAULT PN_SEQ.NEXTVAL PRIMARY KEY,
  MEMBER_ID VARCHAR2(20) NOT NULL,
  LISTING_NUMBER NUMBER(8) NOT NULL,
  PAYOUT NUMBER(8) NOT NULL,
  PAYOUT_DATE DATE DEFAULT SYSDATE NOT NULL,
  
  CONSTRAINT FK_DIVIDEND_DETAILS_MEMBER_ID FOREIGN KEY (MEMBER_ID) REFERENCES ONE_MEMBERS(ID),
  CONSTRAINT FK_DIVIDEND_DETAILS_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 공모 청약
CREATE TABLE PUBLIC_OFFERING (
  PUBLIC_OFFERING_ID NUMBER(8) DEFAULT POI_SEQ.NEXTVAL PRIMARY KEY,
  LISTING_NUMBER NUMBER(8) NOT NULL,
  MEMBER_ID VARCHAR2(20) NOT NULL,
  QUANTITY NUMBER(8) NOT NULL,
  
  CONSTRAINT FK_PUBLIC_OFFERING_MEMBER_ID FOREIGN KEY (MEMBER_ID) REFERENCES ONE_MEMBERS(ID),
  CONSTRAINT FK_PUBLIC_OFFERING_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 매각 투표
CREATE TABLE SELL_VOTE (
  ID NUMBER(8) DEFAULT SV_SEQ.NEXTVAL PRIMARY KEY,
  LISTING_NUMBER NUMBER(8) NOT NULL,
  MEMBER_ID VARCHAR2(20) NOT NULL,
  PROS_CONS VARCHAR2(10) NOT NULL,
  QUANTITY NUMBER(8) NOT NULL,
  SELL_VOTE_DATE DATE DEFAULT SYSDATE NOT NULL,
  
  CONSTRAINT FK_SELL_VOTE_MEMBER_ID FOREIGN KEY (MEMBER_ID) REFERENCES ONE_MEMBERS(ID),
  CONSTRAINT FK_SELL_VOTE_LISTING_NUMBER FOREIGN KEY (LISTING_NUMBER) REFERENCES REAL_ESTATE_SALE(LISTING_NUMBER)
);

-- 공지사항
CREATE TABLE ANNOUNCEMENT (
  ID NUMBER(8) DEFAULT ANNOUNCEMENT_SEQ.NEXTVAl PRIMARY KEY,
  TITLE VARCHAR2(30) NOT NULL,
  CONTENT VARCHAR2(300) NOT NULL,
  WRITE_DATE DATE DEFAULT SYSDATE NOT NULL
);

-- 공통코드M
CREATE TABLE COMMON_CODE_M (
  NAME VARCHAR2(30) PRIMARY KEY
);

-- 공통코드D
CREATE TABLE COMMON_CODE_D (
  CODE VARCHAR2(30) PRIMARY KEY,
  NAME VARCHAR2(30) NOT NULL,
  VALUE VARCHAR2(30) NOT NULL,
  
  CONSTRAINT FK_COMMON_CODE_NAME FOREIGN KEY (NAME) REFERENCES COMMON_CODE_M(NAME)
);

-- 시스템 예외 로그
CREATE TABLE EXCEPTION_LOG (
  ID NUMBER(8) DEFAULT LOG_SEQ.NEXTVAL PRIMARY KEY,
  LOG_CODE VARCHAR2(20),
  OCCUR_DATE DATE DEFAULT SYSDATE,
  PROGRAM VARCHAR2(30),
  MSG VARCHAR2(100),
  NOTE VARCHAR2(50)
);